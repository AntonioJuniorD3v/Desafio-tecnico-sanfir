[{"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/index.js":"1","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/App.js":"2","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/reportWebVitals.js":"3","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/routes/index.js":"4","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Dashboard/index.js":"5","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/index.js":"6","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Dashboard/styles.js":"7","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/styles.js":"8","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalEditClient/index.js":"9","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalEditClient/styles.js":"10","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalAddClient/index.js":"11","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalAddClient/styles.js":"12","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalDeleteClient/index.js":"13","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalDeleteClient/styles.js":"14","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/services/api.js":"15","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Portal/index.js":"16","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Portal/styles.js":"17"},{"size":478,"mtime":1611094534344,"results":"18","hashOfConfig":"19"},{"size":658,"mtime":1611146397958,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611093960393,"results":"21","hashOfConfig":"19"},{"size":468,"mtime":1611146500713,"results":"22","hashOfConfig":"19"},{"size":3292,"mtime":1611146610156,"results":"23","hashOfConfig":"19"},{"size":3476,"mtime":1611145946363,"results":"24","hashOfConfig":"19"},{"size":1425,"mtime":1611100169434,"results":"25","hashOfConfig":"19"},{"size":2391,"mtime":1611145861254,"results":"26","hashOfConfig":"19"},{"size":7608,"mtime":1611145784456,"results":"27","hashOfConfig":"19"},{"size":397,"mtime":1611104164021,"results":"28","hashOfConfig":"19"},{"size":7335,"mtime":1611145616363,"results":"29","hashOfConfig":"19"},{"size":397,"mtime":1611101967052,"results":"30","hashOfConfig":"19"},{"size":2265,"mtime":1611112299195,"results":"31","hashOfConfig":"19"},{"size":550,"mtime":1611100732265,"results":"32","hashOfConfig":"19"},{"size":116,"mtime":1611110129782,"results":"33","hashOfConfig":"19"},{"size":4801,"mtime":1611146148687,"results":"34","hashOfConfig":"19"},{"size":156,"mtime":1611096915882,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"antx5l",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/index.js",[],["75","76"],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/App.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/reportWebVitals.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/routes/index.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Dashboard/index.js",["77"],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/index.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Dashboard/styles.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/styles.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalEditClient/index.js",["78"],"import React, { useState } from 'react';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Edit } from '@material-ui/icons';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport * as yup from 'yup';\nimport { setLocale } from 'yup';\n\nimport api from '../../services/api';\n\nimport { format } from 'date-fns';\n\nsetLocale({\n  string: {\n    email: 'Insira um email vÃ¡lido',\n  },\n});\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label='close'\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nexport default function ModalEditClient({ client, getClients }) {\n  const [loading, setLoading] = React.useState(false);\n\n  const [open, setOpen] = React.useState(false);\n\n  const [name, setName] = useState(client.name);\n  const [email, setEmail] = useState(client.email);\n  const [dateOfBirth, setDateOfBirth] = useState(\n    format(new Date(client.date_of_birth), 'yyyy-MM-dd')\n  );\n  const [city, setCity] = useState(client.city);\n  const [uf, setUf] = useState(client.uf);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    const data = yup.object().shape({\n      name: yup.string().required(),\n      email: yup.string().email().required(),\n      dateOfBirth: yup.date().default(() => new Date().required()),\n      city: yup.string().required(),\n      uf: yup.string().required(),\n    });\n\n    try {\n      await data.validate({\n        name,\n        email,\n        dateOfBirth,\n        city,\n        uf,\n      });\n\n      try {\n        await api.put('clients', {\n          id: client.id,\n          name,\n          email,\n          date_of_birth: dateOfBirth,\n          city,\n          uf,\n        });\n\n        handleClose();\n        getClients();\n      } catch (err) {\n        alert('Ocorreu um erro ao tentar atualizar os dados do cliente.');\n      }\n\n      handleClose();\n      getClients();\n    } catch (e) {\n      e.errors.map((error) => {\n        alert(error);\n      });\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Edit onClick={handleClickOpen} style={{ cursor: 'pointer' }} />\n\n      <Dialog open={open} aria-labelledby='form-dialog-title'>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle\n            id='form-dialog-title'\n            onClose={() => {\n              setOpen(!open);\n            }}\n          >\n            Atualizar dados\n          </DialogTitle>\n          <DialogContent\n            style={{ display: 'flex', flexDirection: 'column', width: '500px' }}\n          >\n            <TextField\n              margin='dense'\n              id='name'\n              defaultValue={name}\n              required\n              label='Nome Completo'\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              variant='outlined'\n            />\n\n            <TextField\n              margin='dense'\n              id='email'\n              defaultValue={email}\n              required\n              label='E-mail'\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n              variant='outlined'\n            />\n            <TextField\n              id='dateOfBirth'\n              label='Data de aniversÃ¡rio'\n              type='date'\n              onChange={(e) => {\n                setDateOfBirth(e.target.value);\n              }}\n              defaultValue={dateOfBirth}\n              variant='outlined'\n              margin='dense'\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              margin='dense'\n              id='city'\n              defaultValue={city}\n              required\n              label='Cidade'\n              onChange={(e) => {\n                setCity(e.target.value);\n              }}\n              variant='outlined'\n            />\n            <FormControl\n              variant='outlined'\n              size='small'\n              style={{ width: '100%', marginTop: '10px' }}\n            >\n              <InputLabel>Estado</InputLabel>\n              <Select\n                value={uf}\n                onChange={(e) => {\n                  setUf(e.target.value);\n                }}\n                labelId='Estado'\n                label='Estado'\n              >\n                <MenuItem value='AC'>Acre</MenuItem>\n                <MenuItem value='AL'>Alagoas</MenuItem>\n                <MenuItem value='AP'>AmapÃ¡</MenuItem>\n                <MenuItem value='AM'>Amazonas</MenuItem>\n                <MenuItem value='BA'>Bahia</MenuItem>\n                <MenuItem value='CE'>CearÃ¡</MenuItem>\n                <MenuItem value='DF'>Distrito Federal</MenuItem>\n                <MenuItem value='ES'>EspÃ­rito Santo</MenuItem>\n                <MenuItem value='GO'>GoiÃ¡s</MenuItem>\n                <MenuItem value='MA'>MaranhÃ£o</MenuItem>\n                <MenuItem value='MT'>Mato Grosso</MenuItem>\n                <MenuItem value='MS'>Mato Grosso do Sul</MenuItem>\n                <MenuItem value='MG'>Minas Gerais</MenuItem>\n                <MenuItem value='PA'>ParÃ¡</MenuItem>\n                <MenuItem value='PB'>ParaÃ­ba</MenuItem>\n                <MenuItem value='PR'>ParanÃ¡</MenuItem>\n                <MenuItem value='PE'>Pernambuco</MenuItem>\n                <MenuItem value='PI'>PiauÃ­</MenuItem>\n                <MenuItem value='RJ'>Rio de Janeiro</MenuItem>\n                <MenuItem value='RN'>Rio Grande do Norte</MenuItem>\n                <MenuItem value='RS'>Rio Grande do Sul</MenuItem>\n                <MenuItem value='RO'>RondÃ´nia</MenuItem>\n                <MenuItem value='RR'>Roraima</MenuItem>\n                <MenuItem value='SC'>Santa Catarina</MenuItem>\n                <MenuItem value='SP'>SÃ£o Paulo</MenuItem>\n                <MenuItem value='SE'>Sergipe</MenuItem>\n                <MenuItem value='TO'>Tocantins</MenuItem>\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant='contained'\n              color='primary'\n              disabled={loading}\n              type='submit'\n            >\n              {loading ? 'Salvando...' : 'Salvar'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalEditClient/styles.js",[],["79","80"],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalAddClient/index.js",["81"],"import React, { useState } from 'react';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Add } from '@material-ui/icons';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport api from '../../services/api';\n\nimport * as yup from 'yup';\nimport { setLocale } from 'yup';\n\nimport { ButtonAddClient } from './styles';\n\nsetLocale({\n  string: {\n    email: 'Insira um email vÃ¡lido',\n  },\n});\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label='close'\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nexport default function ModalAddCoupon({ getClients }) {\n  const [loading, setLoading] = React.useState(false);\n\n  const [open, setOpen] = React.useState(false);\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [dateOfBirth, setDateOfBirth] = useState();\n  const [city, setCity] = useState();\n  const [uf, setUf] = useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    const data = yup.object().shape({\n      name: yup.string().required(),\n      email: yup.string().email().required(),\n      dateOfBirth: yup.date().default(() => new Date().required()),\n      city: yup.string().required(),\n      uf: yup.string().required(),\n    });\n\n    try {\n      await data.validate({\n        name,\n        email,\n        dateOfBirth,\n        city,\n        uf,\n      });\n\n      await api.post('clients', {\n        name,\n        email,\n        date_of_birth: dateOfBirth,\n        city,\n        uf,\n      });\n\n      handleClose();\n      getClients();\n    } catch (e) {\n      e.errors.map((error) => {\n        alert(error);\n      });\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <ButtonAddClient onClick={handleClickOpen}>\n        <Add /> Adicionar cliente\n      </ButtonAddClient>\n      <Dialog open={open} aria-labelledby='form-dialog-title'>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle\n            id='form-dialog-title'\n            onClose={() => {\n              setOpen(!open);\n            }}\n          >\n            Adicionar novo cliente\n          </DialogTitle>\n          <DialogContent\n            style={{ display: 'flex', flexDirection: 'column', width: '500px' }}\n          >\n            <TextField\n              margin='dense'\n              id='name'\n              required\n              label='Nome Completo'\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              variant='outlined'\n            />\n\n            <TextField\n              margin='dense'\n              id='email'\n              type='email'\n              required\n              label='E-mail'\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n              variant='outlined'\n            />\n            <TextField\n              id='dateOfBirth'\n              label='Data de aniversÃ¡rio'\n              type='date'\n              placeholder='dd/MM/yyyy'\n              required\n              for\n              variant='outlined'\n              margin='dense'\n              onChange={(e) => {\n                setDateOfBirth(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              margin='dense'\n              id='city'\n              required\n              label='Cidade'\n              onChange={(e) => {\n                setCity(e.target.value);\n              }}\n              variant='outlined'\n            />\n            <FormControl\n              variant='outlined'\n              size='small'\n              style={{ width: '100%', marginTop: '10px' }}\n            >\n              <InputLabel>Estado</InputLabel>\n              <Select\n                value={uf}\n                onChange={(e) => {\n                  setUf(e.target.value);\n                }}\n                required\n                labelId='Estado'\n                label='Estado'\n              >\n                <MenuItem value='AC'>Acre</MenuItem>\n                <MenuItem value='AL'>Alagoas</MenuItem>\n                <MenuItem value='AP'>AmapÃ¡</MenuItem>\n                <MenuItem value='AM'>Amazonas</MenuItem>\n                <MenuItem value='BA'>Bahia</MenuItem>\n                <MenuItem value='CE'>CearÃ¡</MenuItem>\n                <MenuItem value='DF'>Distrito Federal</MenuItem>\n                <MenuItem value='ES'>EspÃ­rito Santo</MenuItem>\n                <MenuItem value='GO'>GoiÃ¡s</MenuItem>\n                <MenuItem value='MA'>MaranhÃ£o</MenuItem>\n                <MenuItem value='MT'>Mato Grosso</MenuItem>\n                <MenuItem value='MS'>Mato Grosso do Sul</MenuItem>\n                <MenuItem value='MG'>Minas Gerais</MenuItem>\n                <MenuItem value='PA'>ParÃ¡</MenuItem>\n                <MenuItem value='PB'>ParaÃ­ba</MenuItem>\n                <MenuItem value='PR'>ParanÃ¡</MenuItem>\n                <MenuItem value='PE'>Pernambuco</MenuItem>\n                <MenuItem value='PI'>PiauÃ­</MenuItem>\n                <MenuItem value='RJ'>Rio de Janeiro</MenuItem>\n                <MenuItem value='RN'>Rio Grande do Norte</MenuItem>\n                <MenuItem value='RS'>Rio Grande do Sul</MenuItem>\n                <MenuItem value='RO'>RondÃ´nia</MenuItem>\n                <MenuItem value='RR'>Roraima</MenuItem>\n                <MenuItem value='SC'>Santa Catarina</MenuItem>\n                <MenuItem value='SP'>SÃ£o Paulo</MenuItem>\n                <MenuItem value='SE'>Sergipe</MenuItem>\n                <MenuItem value='TO'>Tocantins</MenuItem>\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant='contained'\n              color='primary'\n              disabled={loading}\n              type='submit'\n            >\n              {loading ? 'Salvando...' : 'Salvar'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalAddClient/styles.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalDeleteClient/index.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Clients/ModalDeleteClient/styles.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/services/api.js",[],"/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Portal/index.js",["82"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\n\nimport { NavLink } from 'react-router-dom';\n\nimport logo from '../assets/logo.png';\nimport Routes from '../routes';\n\nimport { Links } from './styles.js';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction Portal(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <img src={logo} width={180} />\n      </div>\n      <Divider />\n      <List>\n        <Links>\n          <NavLink\n            activeStyle={{ color: '#4eb9a7' }}\n            to='/dashboard'\n            style={{ listStyle: 'none' }}\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Dashboard'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to='/clients' activeStyle={{ color: '#4eb9a7' }}>\n            <ListItem button>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Clientes'} />\n            </ListItem>\n          </NavLink>\n        </Links>\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar style={{ backgroundColor: '#4fb9a7' }}>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            edge='start'\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' noWrap>\n            Painel administrativo\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label='mailbox folders'>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation='css'>\n          <Drawer\n            container={container}\n            variant='temporary'\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation='css'>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant='permanent'\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Routes />\n      </main>\n    </div>\n  );\n}\n\nPortal.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default Portal;\n","/home/defaultadmin/Documents/Projetos Web/Processo Sanfir/frontend/src/Portal/styles.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":66,"column":6,"nodeType":"89","endLine":66,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":124,"column":28,"nodeType":"93","messageId":"94","endLine":124,"endColumn":30},{"ruleId":"83","replacedBy":"95"},{"ruleId":"85","replacedBy":"96"},{"ruleId":"91","severity":1,"message":"92","line":114,"column":28,"nodeType":"93","messageId":"94","endLine":114,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":76,"column":9,"nodeType":"99","endLine":76,"endColumn":39},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getClients'. Either include it or remove the dependency array.","ArrayExpression",["102"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["100"],["101"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [getClients]",{"range":"105","text":"106"},[1530,1532],"[getClients]"]